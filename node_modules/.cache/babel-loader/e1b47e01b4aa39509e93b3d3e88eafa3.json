{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/REACT/react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from \"./components/Header\";\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from \"react\";\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n  }, []); // Fetch tasks\n\n  const fetchTasks = async () => {\n    const response = await fetch('http://localhost:5000/tasks');\n    const data = await response.json();\n    console.log(data);\n    return data;\n  }; // Delete task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => {\n      return task.id !== id;\n    }));\n  }; // Toggel reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  }; // Add Task\n\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      task: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : \"No Tasks\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mac/Documents/REACT/react-app/src/App.js"],"names":["React","Header","Tasks","useState","useEffect","toHaveStyle","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","response","fetch","data","json","console","log","deleteTask","id","filter","task","toggleReminder","map","reminder","addTask","Math","floor","random","newTask","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,yCAA5B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAG,YAAY;AAC3B,YAAMC,eAAe,GAAG,MAAMC,UAAU,EAAxC;AACAH,MAAAA,QAAQ,CAACE,eAAD,CAAR;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT,CAJa,CAWb;;AACA,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAP;AACD,GAND,CAZa,CAoBb;;;AACA,QAAMI,UAAU,GAAIC,EAAD,IAAQ;AACzBX,IAAAA,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcC,IAAD,IAAU;AAAC,aAAOA,IAAI,CAACF,EAAL,KAAYA,EAAnB;AAAsB,KAA9C,CAAD,CAAR;AACD,GAFD,CArBa,CAyBb;;;AACA,QAAMG,cAAc,GAAIH,EAAD,IAAQ;AAC7BX,IAAAA,QAAQ,CAACD,KAAK,CAACgB,GAAN,CAAWF,IAAD,IACjBA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGE,IAAJ;AAAUG,MAAAA,QAAQ,EACnC,CAACH,IAAI,CAACG;AADW,KAAjB,GACkBH,IAFX,CAAD,CAAR;AAGD,GAJD,CA1Ba,CAgCb;;;AACA,QAAMI,OAAO,GAAIJ,IAAD,IAAU;AACxB,UAAMF,EAAE,GAAGO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAAEV,MAAAA,EAAF;AAAM,SAAGE;AAAT,KAAhB;AACAb,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWsB,OAAX,CAAD,CAAR;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMvB,cAAc,CAAC,CAACD,WAAF,CAAnC;AACA,MAAA,OAAO,EAAEA;AADT;AAAA;AAAA;AAAA;AAAA,YADF,EAGGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEoB;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHlB,EAKIlB,KAAK,CAACuB,MAAN,GAAe,CAAf,gBACA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEvB,KAAb;AAAoB,MAAA,QAAQ,EAAEW,UAA9B;AACA,MAAA,QAAQ,EAAEI;AADV;AAAA;AAAA;AAAA;AAAA,YADA,GAGA,UARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GApDQlB,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport Header from \"./components/Header\"\nimport Tasks from './components/Tasks'\nimport { useState, useEffect } from \"react\"\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n  }, [])\n\n  // Fetch tasks\n  const fetchTasks = async () => {\n    const response = await fetch('http://localhost:5000/tasks')\n    const data = await response.json()\n\n    console.log(data)\n    return data\n  }\n\n  // Delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => {return task.id !== id}))\n  }\n\n  // Toggel reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => \n      task.id === id ? {...task, reminder: \n      !task.reminder} : task))\n  }\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} \n      showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {\n        tasks.length > 0 ? \n        <Tasks task={tasks} onDelete={deleteTask} \n        onToggle={toggleReminder}/> : \n        \"No Tasks\"\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}