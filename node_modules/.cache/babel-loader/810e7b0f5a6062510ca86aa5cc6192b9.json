{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/REACT/react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from \"./components/Header\";\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from \"react\";\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // Fetch tasks\n\n  const fetchTasks = async () => {\n    const response = await fetch('http://localhost:5000/tasks');\n    const data = await response.json();\n    return data;\n  }; // Delete task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => {\n      return task.id !== id;\n    }));\n  }; // Toggel reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  }; // Add Task\n\n\n  const addTask = async task => {\n    const response = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      header: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await response.json();\n    setTasks([...tasks, data]); // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      task: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : \"No Tasks\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mac/Documents/REACT/react-app/src/App.js"],"names":["React","Header","Tasks","useState","useEffect","toHaveStyle","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","response","fetch","data","json","deleteTask","id","method","filter","task","toggleReminder","map","reminder","addTask","header","body","JSON","stringify","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from \"./components/Header\"\nimport Tasks from './components/Tasks'\nimport { useState, useEffect } from \"react\"\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Fetch tasks\n  const fetchTasks = async () => {\n    const response = await fetch('http://localhost:5000/tasks')\n    const data = await response.json()\n\n    return data\n  }\n\n  // Delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n    setTasks(tasks.filter((task) => {return task.id !== id}))\n  }\n\n  // Toggel reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => \n      task.id === id ? {...task, reminder: \n      !task.reminder} : task))\n  }\n\n  // Add Task\n  const addTask = async (task) => {\n    const response = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      header: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await response.json()\n\n    setTasks([...tasks, data])\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} \n      showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {\n        tasks.length > 0 ? \n        <Tasks task={tasks} onDelete={deleteTask} \n        onToggle={toggleReminder}/> : \n        \"No Tasks\"\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}